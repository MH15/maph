{"id":"core/parse.js","dependencies":[{"name":"/Users/matthewhall/Documents/Projects/Maph/package.json","includedInParent":true,"mtime":1537212974483}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// parse arrays, functions, vectors, etc\n\n\nfunction Array(string) {\n\tvar out = string.split(';');\n\n\tvar left = out[0];\n\tleft = left.split(',');\n\n\tvar right = out[1];\n\tright = right.split(',');\n\n\tvar all = left.concat(right);\n\tall.forEach(function (item) {\n\t\titem = Number(item);\n\t});\n\tconsole.log(all);\n\treturn all;\n}\n\nexports.Array = Array;","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"core/parse.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"core/parse.js","original":{"line":4,"column":0}},{"name":"Array","generated":{"line":9,"column":9},"source":"core/parse.js","original":{"line":4,"column":9}},{"generated":{"line":9,"column":14},"source":"core/parse.js","original":{"line":4,"column":0}},{"name":"string","generated":{"line":9,"column":15},"source":"core/parse.js","original":{"line":4,"column":15}},{"generated":{"line":9,"column":21},"source":"core/parse.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":23},"source":"core/parse.js","original":{"line":4,"column":23}},{"generated":{"line":10,"column":0},"source":"core/parse.js","original":{"line":5,"column":1}},{"name":"out","generated":{"line":10,"column":5},"source":"core/parse.js","original":{"line":5,"column":5}},{"name":"string","generated":{"line":10,"column":11},"source":"core/parse.js","original":{"line":5,"column":11}},{"name":"split","generated":{"line":10,"column":18},"source":"core/parse.js","original":{"line":5,"column":18}},{"generated":{"line":10,"column":23},"source":"core/parse.js","original":{"line":5,"column":11}},{"generated":{"line":10,"column":24},"source":"core/parse.js","original":{"line":5,"column":24}},{"generated":{"line":10,"column":27},"source":"core/parse.js","original":{"line":5,"column":11}},{"generated":{"line":10,"column":28},"source":"core/parse.js","original":{"line":5,"column":1}},{"generated":{"line":12,"column":0},"source":"core/parse.js","original":{"line":7,"column":1}},{"name":"left","generated":{"line":12,"column":5},"source":"core/parse.js","original":{"line":7,"column":5}},{"name":"out","generated":{"line":12,"column":12},"source":"core/parse.js","original":{"line":7,"column":12}},{"generated":{"line":12,"column":16},"source":"core/parse.js","original":{"line":7,"column":16}},{"generated":{"line":12,"column":17},"source":"core/parse.js","original":{"line":7,"column":12}},{"generated":{"line":12,"column":18},"source":"core/parse.js","original":{"line":7,"column":1}},{"name":"left","generated":{"line":13,"column":0},"source":"core/parse.js","original":{"line":8,"column":1}},{"name":"left","generated":{"line":13,"column":8},"source":"core/parse.js","original":{"line":8,"column":8}},{"name":"split","generated":{"line":13,"column":13},"source":"core/parse.js","original":{"line":8,"column":13}},{"generated":{"line":13,"column":18},"source":"core/parse.js","original":{"line":8,"column":8}},{"generated":{"line":13,"column":19},"source":"core/parse.js","original":{"line":8,"column":19}},{"generated":{"line":13,"column":22},"source":"core/parse.js","original":{"line":8,"column":8}},{"generated":{"line":13,"column":23},"source":"core/parse.js","original":{"line":8,"column":1}},{"generated":{"line":15,"column":0},"source":"core/parse.js","original":{"line":10,"column":1}},{"name":"right","generated":{"line":15,"column":5},"source":"core/parse.js","original":{"line":10,"column":5}},{"name":"out","generated":{"line":15,"column":13},"source":"core/parse.js","original":{"line":10,"column":13}},{"generated":{"line":15,"column":17},"source":"core/parse.js","original":{"line":10,"column":17}},{"generated":{"line":15,"column":18},"source":"core/parse.js","original":{"line":10,"column":13}},{"generated":{"line":15,"column":19},"source":"core/parse.js","original":{"line":10,"column":1}},{"name":"right","generated":{"line":16,"column":0},"source":"core/parse.js","original":{"line":11,"column":1}},{"name":"right","generated":{"line":16,"column":9},"source":"core/parse.js","original":{"line":11,"column":9}},{"name":"split","generated":{"line":16,"column":15},"source":"core/parse.js","original":{"line":11,"column":15}},{"generated":{"line":16,"column":20},"source":"core/parse.js","original":{"line":11,"column":9}},{"generated":{"line":16,"column":21},"source":"core/parse.js","original":{"line":11,"column":21}},{"generated":{"line":16,"column":24},"source":"core/parse.js","original":{"line":11,"column":9}},{"generated":{"line":16,"column":25},"source":"core/parse.js","original":{"line":11,"column":1}},{"generated":{"line":18,"column":0},"source":"core/parse.js","original":{"line":13,"column":1}},{"name":"all","generated":{"line":18,"column":5},"source":"core/parse.js","original":{"line":13,"column":5}},{"name":"left","generated":{"line":18,"column":11},"source":"core/parse.js","original":{"line":13,"column":11}},{"name":"concat","generated":{"line":18,"column":16},"source":"core/parse.js","original":{"line":13,"column":16}},{"generated":{"line":18,"column":22},"source":"core/parse.js","original":{"line":13,"column":11}},{"name":"right","generated":{"line":18,"column":23},"source":"core/parse.js","original":{"line":13,"column":23}},{"generated":{"line":18,"column":28},"source":"core/parse.js","original":{"line":13,"column":11}},{"generated":{"line":18,"column":29},"source":"core/parse.js","original":{"line":13,"column":1}},{"name":"all","generated":{"line":19,"column":0},"source":"core/parse.js","original":{"line":14,"column":1}},{"name":"forEach","generated":{"line":19,"column":5},"source":"core/parse.js","original":{"line":14,"column":5}},{"generated":{"line":19,"column":12},"source":"core/parse.js","original":{"line":14,"column":1}},{"generated":{"line":19,"column":13},"source":"core/parse.js","original":{"line":14,"column":13}},{"generated":{"line":19,"column":29},"source":"core/parse.js","original":{"line":14,"column":21}},{"name":"item","generated":{"line":20,"column":0},"source":"core/parse.js","original":{"line":15,"column":2}},{"name":"Number","generated":{"line":20,"column":9},"source":"core/parse.js","original":{"line":15,"column":9}},{"name":"item","generated":{"line":20,"column":16},"source":"core/parse.js","original":{"line":15,"column":16}},{"generated":{"line":20,"column":20},"source":"core/parse.js","original":{"line":15,"column":9}},{"generated":{"line":20,"column":21},"source":"core/parse.js","original":{"line":15,"column":2}},{"generated":{"line":21,"column":0},"source":"core/parse.js","original":{"line":16,"column":2}},{"generated":{"line":21,"column":2},"source":"core/parse.js","original":{"line":14,"column":1}},{"name":"console","generated":{"line":22,"column":0},"source":"core/parse.js","original":{"line":17,"column":1}},{"name":"log","generated":{"line":22,"column":9},"source":"core/parse.js","original":{"line":17,"column":9}},{"generated":{"line":22,"column":12},"source":"core/parse.js","original":{"line":17,"column":1}},{"name":"all","generated":{"line":22,"column":13},"source":"core/parse.js","original":{"line":17,"column":13}},{"generated":{"line":22,"column":16},"source":"core/parse.js","original":{"line":17,"column":1}},{"generated":{"line":23,"column":0},"source":"core/parse.js","original":{"line":18,"column":1}},{"name":"all","generated":{"line":23,"column":8},"source":"core/parse.js","original":{"line":18,"column":8}},{"generated":{"line":23,"column":11},"source":"core/parse.js","original":{"line":18,"column":1}},{"generated":{"line":24,"column":0},"source":"core/parse.js","original":{"line":19,"column":1}},{"name":"Array","generated":{"line":26,"column":8},"source":"core/parse.js","original":{"line":24,"column":9}},{"name":"Array","generated":{"line":26,"column":16},"source":"core/parse.js","original":{"line":24,"column":9}}],"sources":{"core/parse.js":"// parse arrays, functions, vectors, etc\n\n\nfunction Array(string) {\n\tlet out = string.split(';')\n\n\tlet left = out[0]\n\tleft = left.split(',')\n\n\tlet right = out[1]\n\tright = right.split(',')\n\n\tlet all = left.concat(right)\n\tall.forEach(item => {\n\t\titem = Number(item)\n\t})\n\tconsole.log(all)\n\treturn all\n}\n\n\n\n\nexport { Array }"},"lineCount":null}},"hash":"e8a719e131c55d4fe85b0c052cccbbc8","cacheData":{"env":{}}}